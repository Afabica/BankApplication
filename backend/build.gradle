plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.junit:junit-bom:5.8.2"  // JUnit BOM for version management
    }
}

dependencies {
    // Spring Boot Starter for JPA (uses Jakarta Persistence in Spring Boot 3.x)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //dependency for data encryption like sensetive information in database 
//    implementation 'org.jasypt:jasypt-spring-boot-starter:3.0.5'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-web'
    implementation 'org.springframework.security:spring-security-config'
     runtimeOnly 'com.h2database:h2'

    // JSON Web Token (JWT) dependencies
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Spring Web and Web MVC
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Boot WebFlux (Optional, if you plan to use reactive features)
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    // Spring Boot Starter for Caching
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //reactor-core
    implementation 'io.projectreactor:reactor-core:3.4.20'
    implementation 'io.projectreactor.netty:reactor-netty:1.1.22'
    //Grid Send
    implementation 'com.sendgrid:sendgrid-java:4.9.3'
//    implementation 'com.twilio.sdk:twilio:8.37.0' // Replace with the latest version
    implementation 'com.twilio.sdk:twilio:7.34.0'
    implementation 'com.google.guava:guava:19.0'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.10'


    // Connection Pooling (HikariCP is the default in Spring Boot)
    implementation 'com.zaxxer:HikariCP'

    // Azure Communication and Blob Storage
    implementation 'com.azure:azure-communication-chat:1.0.0-beta.3'
    implementation 'com.azure:azure-storage-blob:12.12.0'
    implementation 'com.azure.spring:azure-spring-boot-starter-storage:3.14.0'
    implementation 'commons-fileupload:commons-fileupload:1.3.1'
    // PostgreSQL Driver
    implementation 'org.postgresql:postgresql:42.6.0'

    // Thymeleaf (Spring Security integration)
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.2.RELEASE'

    // Jakarta Persistence and Validation API (Spring Boot 3.x uses Jakarta)
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    implementation 'org.jasypt:jasypt:1.9.3'


    // Lombok (Compile-time annotation processing)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // Spring Boot starter for tests
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0' // Update to JUnit 5.9.0
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.0' // Update to JUnit 5.9.0
    testImplementation 'org.springframework.security:spring-security-test' // For Spring Security testing
    implementation 'com.h2database:h2'
}


tasks.named('test') {
    useJUnitPlatform() // Ensures JUnit 5 is used in tests
}

