plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.junit:junit-bom:5.9.0"
    }
}

dependencies {
    // Core Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-web'              // MVC
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'         // JPA
    implementation 'org.springframework.boot:spring-boot-starter-security'         // Security
    implementation 'org.springframework.boot:spring-boot-starter-cache'            // Caching
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'     // MongoDB

    // PDF generation
    implementation 'com.itextpdf:itext7-core:7.2.5'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // JSON handling
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Database
    runtimeOnly 'com.h2database:h2'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'com.zaxxer:HikariCP'

    // OpenAPI / Swagger UI
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.10'

    // Thymeleaf + Spring Security integration
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.2.RELEASE'

    // Utilities
    implementation 'com.google.guava:guava:19.0'
    implementation 'commons-fileupload:commons-fileupload:1.3.1'

    // Messaging / External APIs
    implementation 'com.sendgrid:sendgrid-java:4.9.3'
    implementation 'com.twilio.sdk:twilio:7.34.0'

    // Redis (for caching/session/etc.)
    implementation 'org.springframework.data:spring-data-redis'

    // Azure SDKs (if needed)
    implementation 'com.azure:azure-communication-chat:1.0.0-beta.3'
    implementation 'com.azure:azure-storage-blob:12.12.0'
    implementation 'com.azure.spring:azure-spring-boot-starter-storage:3.14.0'

    // Jakarta APIs
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // Testing
    testImplementation 'org.testcontainers:junit-jupiter:1.19.7'
    testImplementation 'org.testcontainers:postgresql:1.19.7'
    testImplementation 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'com.h2database:h2'
}

tasks.withType(ProcessResources).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
    useJUnitPlatform()
}

