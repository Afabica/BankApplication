name: Second Workflow

on: 
#  push: 
#    branches:
#      - main
#  pull_request: 
#    branches:
#      - main
    workflow_run:
        workflows: ["First Workflow"] 
        types:
            - completed


env: 
  CLUSTER_NAME: my-aks-cluster
  RESOURCE_GROUP: spring
  NAMESPACE: https-con

jobs: 
  build-and-deploy:
    runs-on: ubuntu-22.04
    steps:
      # Step 1: Azure Login
      - name: Azure Login 
        uses: azure/login@v1 
        with: 
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      # Step 2: Create image pull secret
      - name: Create image pull secret
        uses: azure/k8s-create-secret@v1
        with:
          secret-name: dockerhub-secret 
          container-registry-url: https://index.docker.io/v1/ 
          container-registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
          container-registry-password: ${{ secrets.DOCKERHUB_TOKEN }} 

      # Step 3: Deploy Spring Boot app
      - name: Deploy Spring Boot app
        run: |
          kubectl apply -f k8s/backend-deploy.yaml
          kubectl apply -f k8s/backend-svc.yaml
          kubectl rollout status deployment/backend-deploy -n ${{ env.NAMESPACE }}

      # Step 4: Deploy Next.js app
      - name: Deploy Next.js app
        run: |
          kubectl apply -f k8s/frontend-deploy.yaml
          kubectl apply -f k8s/frontend-svc.yaml
          kubectl rollout status deployment/nextjs-deployment -n ${{ env.NAMESPACE }}

      # Step 5: Deploy Nginx server
      - name: Deploy Nginx server
        run: | 
          kubectl apply -f k8s/nginx-deploy.yaml
          kubectl apply -f k8s/nginx-configmap.yaml
          kubectl apply -f k8s/nginx-svc.yaml

