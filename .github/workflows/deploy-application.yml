env: 
  CLUSTER_NAME: my-aks-cluster
  RESOURCE_GROUP: spring
  NAMESPACE: https-con

jobs: 
  build-and-deploy:
    runs-on: ubuntu-22.04
    steps:
      - name: Azure Login 
        uses: azure/login@v1 
        with: 
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create image pull secret
        uses: azure/k8s-create-secret@v1
        with:
          secret-name: dockerhub-secret 
          container-registry-url: https://index.docker.io/v1/ 
          container-registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
          container-registry-password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      - name: Deploy Spring Boot app
        run: |
          kubectl apply -f k8s/backend-deploy.yaml -n ${{ env.NAMESPACE }}
          kubectl apply -f k8s/backend-svc.yaml -n ${{ env.NAMESPACE }}
          kubectl rollout status deployment/backend-deploy -n ${{ env.NAMESPACE }}

      - name: Deploy Next.js app
        run: |
          kubectl apply -f k8s/frontend-deploy.yaml -n ${{ env.NAMESPACE }}
          kubectl apply -f k8s/frontend-svc.yaml -n ${{ env.NAMESPACE }}
          kubectl rollout status deployment/nextjs-deployment -n ${{ env.NAMESPACE }}

      - name: Deploy Nginx server
        run: | 
          kubectl apply -f k8s/nginx-deploy.yaml -n ${{ env.NAMESPACE }}
          kubectl apply -f k8s/nginx-configmap.yaml -n ${{ env.NAMESPACE }}
          kubectl apply -f k8s/nginx-svc.yaml -n ${{ env.NAMESPACE }}

