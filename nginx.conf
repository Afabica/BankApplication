
server {
    listen 80;
    server_name your-domain.com;  # The domain for your site

    # Reverse proxy for Next.js app
    location / {
        proxy_pass http://nextjs-service:3000;  # Next.js app running on port 3000 in Kubernetes
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Reverse proxy for Spring Boot API
    location /api/ {
        proxy_pass http://springboot-service:8080;  # Spring Boot app running on port 8080 in Kubernetes
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Add CORS headers for frontend-backend communication
    location /api/ {
        add_header 'Access-Control-Allow-Origin' 'http://your-nextjs-domain.com';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
        add_header 'Access-Control-Allow-Credentials' 'true';
    }

    # Optionally, handle OPTIONS requests for CORS preflight
    location /api/ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'http://your-nextjs-domain.com';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
}

